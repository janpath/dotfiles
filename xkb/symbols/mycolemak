// MyColemak
// Author: Jan Path

partial default alphanumeric_keys
xkb_symbols "basic" {
    name[Group1]= "English (MyColemak)";

    key.type[Group1] = "EIGHT_LEVEL";

    key <ESC>  { type[Group1]="TWO_LEVEL",   [  Escape, Caps_Lock                      ] };
    key <TLDE> { type[Group1]="ONE_LEVEL",   [  Caps_Lock ] };
    key <AE01> { type[Group1]="TWO_LEVEL",   [  Multi_key, ISO_Level5_Lock             ] };
    key <AE02> { [            7,            EuroSign, F7                               ] };
    key <AE03> { [            5,           doublelowquotemark, F5                      ] };
    key <AE04> { [            3,          leftdoublequotemark, F3                      ] };
    key <AE05> { [            1,         rightdoublequotemark, F2                      ] };
    key <AE06> { [            9,                NoSymbol, F9                           ] };
    key <AE07> { [            0,                U2205, F10                             ] };
    key <AE08> { [            2,           singlelowquotemark, F2                      ] };
    key <AE09> { [            4,          leftsinglequotemark, F4                      ] };
    key <AE10> { [            6,         rightsinglequotemark, F6                      ] };
    key <AE11> { [            8,            U221E, NoSymbol, F8                        ] };
    key <AE12> { [   odiaeresis,   Odiaeresis, F12                                     ] };

    key <TAB>  { type[Group1]="ONE_LEVEL", [BackSpace] };
    key <LatQ> { [            q,            Q,           asciitilde, U220E, Greek_theta, Greek_THETA, U03D1, U211A ] };
    key <LatW> { [            w,            W,                minus, U29F5, Greek_omega, Greek_OMEGA, U2284, U2285] };
    key <LatE> { [            f,            F,           underscore, U2247, Greek_phi,   Greek_PHI, U21D4  ] };
    key <LatR> { [            p,            P,                equal, U2245, Greek_pi,    Greek_PI, U2026, U22EF  ] };
    key <LatT> { [            g,            G,           numbersign, NoSymbol, Greek_gamma, Greek_GAMMA, U2265] };
    key <LatY> { [            j,            J,     ISO_Level5_Latch, U2190                        ] };
    key <LatU> { [            l,            L,          bracketleft, NoSymbol, Greek_lambda, Greek_LAMBDA] };
    key <LatI> { [            u,            U,            braceleft, NoSymbol, Greek_upsilon,Greek_UPSILON]};
    key <LatO> { [            y,            Y,           braceright, NoSymbol, Greek_psi,    Greek_PSI ] };
    key <LatP> { [    semicolon,        colon,         bracketright                       ] };
    key <AD11> { [   udiaeresis,   Udiaeresis,               ssharp                       ] };
    key <AD12> { [   adiaeresis,   Adiaeresis                                             ] };

    key <CAPS> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ]           };
    key <LatA> { [            a,            A,               exclam, NoSymbol, Greek_alpha, Greek_ALPHA, U2200 ] };
    key <LatS> { [            r,            R,               dollar, NoSymbol, Greek_rho,   Greek_RHO, NoSymbol, U211D ] };
    key <LatD> { [            s,            S,            parenleft, U22CA, Greek_sigma, Greek_SIGMA, U2282, U2283 ] };
    key <LatF> { [            t,            T,           parenright, U2192, Greek_tau,   Greek_TAU, U21D2, U21D0 ] };
    key <LatG> { [            d,            D,           apostrophe, U2260, Greek_delta, Greek_DELTA, U00B7, U2223] };
    key <LatH> { [            h,            H,             quotedbl, NoSymbol, Greek_eta,   Greek_ETA, NoSymbol, U2224 ] };
    key <LatJ> { [            n,            N,                 Left, U22B2, Greek_nu,    Greek_NU, U2211, U2115 ] };
    key <LatK> { [            e,            E,                 Down, U220B, Greek_epsilon, Greek_EPSILON, U2203, U2209] };
    key <LatL> { [            i,            I,                   Up, U2208, Greek_iota,  Greek_IOTA, U222B ] };
    key <AC10> { [            o,            O,                Right, U2218, Greek_omicron, Greek_OMICRON  ] };
    key <AC11> { type[Group1]="ONE_LEVEL", symbols[Group1] = [ ISO_Level3_Shift ]           };
    key <BKSL> { [          Tab,          Tab,                  Tab                       ] };

    key <LSGT> { [       Escape,       Escape,               Escape                       ] };
    key <LatZ> { [            z,            Z,              percent, NoSymbol, Greek_zeta, Greek_ZETA, NoSymbol, U2124 ] };
    key <LatX> { [            x,            X,            backslash, NoSymbol, Greek_chi, Greek_CHI, U00D7  ] };
    key <LatC> { [            c,            C,            ampersand, U2261, Greek_xi, Greek_XI, U2262, U2102] };
    key <LatV> { [            v,            V,             asterisk, NoSymbol, NoSymbol, NoSymbol, U2229] };
    key <LatB> { [            b,            B,   Pointer_EnableKeys, Overlay1_Enable, Greek_beta, Greek_BETA ] };
    key <LatN> { [            k,            K,                 plus, NoSymbol, Greek_kappa, Greek_KAPPA, U222A, U1D542] };
    key <LatM> { [            m,            M,                   at, U21A6, Greek_mu,    Greek_MU, U220F, U2210 ] };
    key <AB08> { [        comma,         less,                  bar, U2264
    ], overlay1 = <PT1> };
    key <AB09> { [       period,      greater,          asciicircum, U2265
    ], overlay1 = <PT3> };
    key <AB10> { [        slash,     question,                grave
    ], overlay1 = <PT2> };

    key <SPCE> { [        space,        space,                space,         space ] };

    key <PT1> { type[Group1]="ONE_LEVEL", [Pointer_Button1] };
    key <PT2> { type[Group1]="ONE_LEVEL", [Pointer_Button2] };
    key <PT3> { type[Group1]="ONE_LEVEL", [Pointer_Button3] };

    include "level3(modifier_mapping)"
    include "level5(modifier_mapping)"
};
